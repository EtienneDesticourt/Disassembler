OPCODES = {0x00:('ADD', 3, 0),
	0x01:('ADD', 3, 0),
	0x02:('ADD', 3, 0),
	0x03:('ADD', 3, 0),
	0x04:('ADD', 3, 0),
	0x05:('ADD', 3, 0),
	0x06:('PUSH', 1, 0),
	0x07:('POP', 2, 0),
	0x08:('OR', 3, 0),
	0x09:('OR', 3, 0),
	0x0A:('OR', 3, 0),
	0x0B:('OR', 3, 0),
	0x0C:('OR', 3, 0),
	0x0D:('OR', 3, 0),
	0x0E:('PUSH', 1, 0),
	0x10:('ADC', 3, 0),
	0x11:('ADC', 3, 0),
	0x12:('ADC', 3, 0),
	0x13:('ADC', 3, 0),
	0x14:('ADC', 3, 0),
	0x15:('ADC', 3, 0),
	0x16:('PUSH', 1, 0),
	0x17:('POP', 2, 0),
	0x18:('SBB', 3, 0),
	0x19:('SBB', 3, 0),
	0x1A:('SBB', 3, 0),
	0x1B:('SBB', 3, 0),
	0x1C:('SBB', 3, 0),
	0x1D:('SBB', 3, 0),
	0x1E:('PUSH', 1, 0),
	0x1F:('POP', 2, 0),
	0x20:('AND', 3, 0),
	0x21:('AND', 3, 0),
	0x22:('AND', 3, 0),
	0x23:('AND', 3, 0),
	0x24:('AND', 3, 0),
	0x25:('AND', 3, 0),
	0x26:('ES:', 0, 2),
	0x27:('DAA', 0, 0),
	0x28:('SUB', 3, 0),
	0x29:('SUB', 3, 0),
	0x2A:('SUB', 3, 0),
	0x2B:('SUB', 3, 0),
	0x2C:('SUB', 3, 0),
	0x2D:('SUB', 3, 0),
	0x2E:('CS:', 0, 2),
	0x2F:('DAS', 0, 0),
	0x30:('XOR', 3, 0),
	0x31:('XOR', 3, 0),
	0x32:('XOR', 3, 0),
	0x33:('XOR', 3, 0),
	0x34:('XOR', 3, 0),
	0x35:('XOR', 3, 0),
	0x36:('SS:', 0, 2),
	0x37:('AAA', 0, 0),
	0x38:('CMP', 3, 0),
	0x39:('CMP', 3, 0),
	0x3A:('CMP', 3, 0),
	0x3B:('CMP', 3, 0),
	0x3C:('CMP', 3, 0),
	0x3D:('CMP', 3, 0),
	0x3E:('DS:', 0, 2),
	0x3F:('AAS', 0, 0),
	0x40:('INC', 2, 0),
	0x41:('INC', 2, 0),
	0x42:('INC', 2, 0),
	0x43:('INC', 2, 0),
	0x44:('INC', 2, 0),
	0x45:('INC', 2, 0),
	0x46:('INC', 2, 0),
	0x47:('INC', 2, 0),
	0x48:('DEC', 2, 0),
	0x49:('DEC', 2, 0),
	0x4A:('DEC', 2, 0),
	0x4B:('DEC', 2, 0),
	0x4C:('DEC', 2, 0),
	0x4D:('DEC', 2, 0),
	0x4E:('DEC', 2, 0),
	0x4F:('DEC', 2, 0),
	0x50:('PUSH', 1, 0),
	0x51:('PUSH', 1, 0),
	0x52:('PUSH', 1, 0),
	0x53:('PUSH', 1, 0),
	0x54:('PUSH', 1, 0),
	0x55:('PUSH', 1, 0),
	0x56:('PUSH', 1, 0),
	0x57:('PUSH', 1, 0),
	0x58:('POP', 2, 0),
	0x59:('POP', 2, 0),
	0x5A:('POP', 2, 0),
	0x5B:('POP', 2, 0),
	0x5C:('POP', 2, 0),
	0x5D:('POP', 2, 0),
	0x5E:('POP', 2, 0),
	0x5F:('POP', 2, 0),
	0x70:('JO', 2, 0),
	0x71:('JNO', 2, 0),
	0x72:('JB', 2, 0),
	0x73:('JNB', 2, 0),
	0x74:('JZ', 2, 0),
	0x75:('JNZ', 2, 0),
	0x76:('JBE', 2, 0),
	0x77:('JA', 2, 0),
	0x78:('JS', 2, 0),
	0x79:('JNS', 2, 0),
	0x7A:('JPE', 2, 0),
	0x7B:('JPO', 2, 0),
	0x7C:('JL', 2, 0),
	0x7D:('JGE', 2, 0),
	0x7E:('JLE', 2, 0),
	0x7F:('JG', 2, 0),
	0x80:('GRP1', 2, 0),
	0x81:('GRP1', 2, 0),
	0x82:('GRP1', 2, 0),
	0x83:('GRP1', 2, 0),
	0x84:('TEST', 2, 0),
	0x85:('TEST', 2, 0),
	0x86:('XCHG', 2, 0),
	0x87:('XCHG', 2, 0),
	0x88:('MOV', 3, 0),
	0x89:('MOV', 3, 0),
	0x8A:('MOV', 3, 0),
	0x8B:('MOV', 3, 0),
	0x8C:('MOV', 3, 0),
	0x8D:('LEA', 3, 0),
	0x8E:('MOV', 3, 0),
	0x8F:('POP', 2, 0),
	0x90:('NOP', 0, 0),
	0x91:('XCHG', 1, 0),
	0x92:('XCHG', 1, 0),
	0x93:('XCHG', 1, 0),
	0x94:('XCHG', 1, 0),
	0x95:('XCHG', 1, 0),
	0x96:('XCHG', 1, 0),
	0x97:('XCHG', 1, 0),
	0x98:('CBW', 0, 0),
	0x99:('CWD', 0, 0),
	0x9A:('CALL', 1, 0),
	0x9B:('WAIT', 0, 0),
	0x9C:('PUSHF', 0, 0),
	0x9D:('POPF', 0, 0),
	0x9E:('SAHF', 0, 0),
	0x9F:('LAHF', 0, 0),
	0xA0:('MOV', 3, 0),
	0xA1:('MOV', 3, 0),
	0xA2:('MOV', 3, 0),
	0xA3:('MOV', 3, 0),
	0xA4:('MOVSB', 0, 0),
	0xA5:('MOVSW', 0, 0),
	0xA6:('CMPSB', 0, 0),
	0xA7:('CMPSW', 0, 0),
	0xA8:('TEST', 2, 0),
	0xA9:('TEST', 2, 0),
	0xAA:('STOSB', 0, 0),
	0xAB:('STOSW', 0, 0),
	0xAC:('LODSB', 0, 0),
	0xAD:('LODSW', 0, 0),
	0xAE:('SCASB', 0, 0),
	0xAF:('SCASW', 0, 0),
	0xB0:('MOV', 3, 0),
	0xB1:('MOV', 3, 0),
	0xB2:('MOV', 3, 0),
	0xB3:('MOV', 3, 0),
	0xB4:('MOV', 3, 0),
	0xB5:('MOV', 3, 0),
	0xB6:('MOV', 3, 0),
	0xB7:('MOV', 3, 0),
	0xB8:('MOV', 3, 0),
	0xB9:('MOV', 3, 0),
	0xBA:('MOV', 3, 0),
	0xBB:('MOV', 3, 0),
	0xBC:('MOV', 3, 0),
	0xBD:('MOV', 3, 0),
	0xBE:('MOV', 3, 0),
	0xBF:('MOV', 3, 0),
	0xC2:('RET', 2, 0),
	0xC3:('RET', 0, 0),
	0xC4:('LES', 3, 0),
	0xC5:('LDS', 3, 0),
	0xC6:('MOV', 3, 0),
	0xC7:('MOV', 3, 0),
	0xCA:('RETF', 1, 0),
	0xCB:('RETF', 0, 0),
	0xCC:('INT', 2, 0),
	0xCD:('INT', 2, 0),
	0xCE:('INTO', 0, 0),
	0xCF:('IRET', 0, 0),
	0xD0:('GRP2', 2, 0),
	0xD1:('GRP2', 2, 0),
	0xD2:('GRP2', 2, 0),
	0xD3:('GRP2', 2, 0),
	0xD4:('AAM', 2, 0),
	0xD5:('AAD', 2, 0),
	0xD7:('XLAT', 0, 0),
	0xE0:('LOOPNZ', 1, 0),
	0xE1:('LOOPZ', 1, 0),
	0xE2:('LOOP', 1, 0),
	0xE3:('JCXZ', 1, 0),
	0xE4:('IN', 3, 0),
	0xE5:('IN', 3, 0),
	0xE6:('OUT', 3, 0),
	0xE7:('OUT', 3, 0),
	0xE8:('CALL', 1, 0),
	0xE9:('JMP', 2, 0),
	0xEA:('JMP', 2, 0),
	0xEB:('JMP', 2, 0),
	0xEC:('IN', 3, 0),
	0xED:('IN', 3, 0),
	0xEE:('OUT', 3, 0),
	0xEF:('OUT', 3, 0),
	0xF0:('LOCK', 0, 1),
	0xF2:('REPNZ', 0, 1),
	0xF3:('REPZ', 0, 1),
	0xF4:('HLT', 0, 0),
	0xF5:('CMC', 0, 0),
	0xF6:('GRP3a', 1, 0),
	0xF7:('GRP3b', 1, 0),
	0xF8:('CLC', 0, 0),
	0xF9:('STC', 0, 0),
	0xFA:('CLI', 0, 0),
	0xFB:('STI', 0, 0),
	0xFC:('CLD', 0, 0),
	0xFD:('STD', 0, 0),
	0xFE:('GRP4', 1, 0),
	0xFF:('GRP5', 1, 0)}

RM = [[("[rm]", 0), ("[rm + byte]", 1)],[("[rm + word]", 4), ("rm", 0)]]
REG = []


p1 = ['0xF0', '0xF2', '0xF3']
p2 = ['0x2E', '0x36', '0x3E', '0x26', '0x64', '0x65', '0x2E', '0x3E']
p3 = ['0x66']
p4 = ['0x67']


